// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model users {
    id         String   @id @default(uuid()) @map("_id")
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    name       String
    username   String   @unique
    password   String
    role       role     @default(GUEST)
    status     Boolean  @default(false)
    posts      posts[]
    images     images[]
}

model images {
    id                  String   @id @default(uuid()) @map("_id")
    created_at          DateTime @default(now())
    updated_at          DateTime @updatedAt
    title               String
    url                 String
    size                Int
    width               Int
    height              Int
    mimetype            String
    userId              String?
    users               users?        @relation(fields: [userId], references: [id])
    products            products[]
    product_categories  product_categories[]
}

model posts {
    id         String       @id @default(uuid()) @map("_id")
    created_at DateTime     @default(now())
    updated_at DateTime     @updatedAt
    title      String
    content    String?      @db.Text
    userId     String
    users      users        @relation(fields: [userId], references: [id])
    status     Boolean      @default(false)
    categories categories[]
}

model categories {
    id         String   @id @default(uuid()) @map("_id")
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    title      String   @unique
    status     Boolean  @default(false)
    postId     String
    posts      posts    @relation(fields: [postId], references: [id])
}

enum role {
    GUEST
    USER
    ADMIN
    SUPERADMIN
}

model products {
    id                  String   @id @default(uuid()) @map("_id")
    created_at          DateTime @default(now())
    updated_at          DateTime @updatedAt
    title               String
    price               Int
    status              Boolean  @default(false)
    description         String @db.Text
    stock               Int
    recommended         Boolean  @default(false)
    rate_count          Int?
    promos              product_promos[]
    images              images[]
    orders              orders[]
    categories          product_categories[]
    variants            product_variants[]
    tags                tags[]
}

model product_categories {
    id                          String      @id @default(uuid()) @map("_id")
    created_at                  DateTime    @default(now())
    updated_at                  DateTime    @updatedAt
    title                       String?      @unique
    status                      Boolean?     @default(false)
    products                    products[]
    imageId                     String?
    images                      images? @relation(fields: [imageId], references: [id])
}



model product_variants {
    id         String   @id @default(uuid()) @map("_id")
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    title      String
    status     Boolean  @default(false)
    products   products[]
}

model product_promos {
    id                  String   @id @default(uuid()) @map("_id")
    created_at          DateTime @default(now())
    updated_at          DateTime @updatedAt
    title               String
    promo_code          String
    discount_price      Int
    discount_percentage Int    
    status              Boolean  @default(false)
    productId           String
    products            products @relation(fields: [productId], references: [id])
}


model tags {
    id         String   @id @default(uuid()) @map("_id")
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    title      String
    status     Boolean  @default(false)
    products   products[]
}


model orders {
    id                  String   @id @default(uuid()) @map("_id")
    created_at          DateTime @default(now())
    updated_at          DateTime @updatedAt
    status              Boolean  @default(false)
    payment_method      String
    products            products[]
    total               Int
    address             String
}